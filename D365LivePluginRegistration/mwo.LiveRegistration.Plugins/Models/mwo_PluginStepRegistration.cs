//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace mwo.LiveRegistration.Plugins.Models
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mwo_PluginStepRegistrationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// This entity is a management entity for Plugin Step Registrations
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("mwo_pluginstepregistration")]
	public partial class mwo_PluginStepRegistration : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string mwo_AsyncAutoDelete = "mwo_asyncautodelete";
			public const string mwo_Asynchronous = "mwo_asynchronous";
			public const string mwo_Description = "mwo_description";
			public const string mwo_EventHandler = "mwo_eventhandler";
			public const string mwo_EventHandlerType = "mwo_eventhandlertype";
			public const string mwo_FilteringAttributes = "mwo_filteringattributes";
			public const string mwo_ImageAttributes = "mwo_imageattributes";
			public const string mwo_ImageName = "mwo_imagename";
			public const string mwo_ImageType = "mwo_imagetype";
			public const string mwo_Managed = "mwo_managed";
			public const string mwo_Name = "mwo_name";
			public const string mwo_PluginStepId = "mwo_pluginstepid";
			public const string mwo_PluginStepRegistrationId = "mwo_pluginstepregistrationid";
			public const string Id = "mwo_pluginstepregistrationid";
			public const string mwo_PluginStepStage = "mwo_pluginstepstage";
			public const string mwo_PrimaryEntity = "mwo_primaryentity";
			public const string mwo_Rank = "mwo_rank";
			public const string mwo_SDKMessage = "mwo_sdkmessage";
			public const string mwo_SecondaryEntity = "mwo_secondaryentity";
			public const string mwo_StepConfiguration = "mwo_stepconfiguration";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public mwo_PluginStepRegistration() : 
				base(EntityLogicalName)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public mwo_PluginStepRegistration(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public mwo_PluginStepRegistration(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public mwo_PluginStepRegistration(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string AlternateKeys = "mwo_pluginstepid";
		
		public const string EntityLogicalName = "mwo_pluginstepregistration";
		
		public const string EntitySchemaName = "mwo_PluginStepRegistration";
		
		public const string PrimaryIdAttribute = "mwo_pluginstepregistrationid";
		
		public const string PrimaryNameAttribute = "mwo_name";
		
		public const string EntityLogicalCollectionName = "mwo_pluginstepregistrations";
		
		public const string EntitySetName = "mwo_pluginstepregistrations";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_asyncautodelete")]
		public System.Nullable<bool> mwo_AsyncAutoDelete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("mwo_asyncautodelete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_AsyncAutoDelete");
				this.SetAttributeValue("mwo_asyncautodelete", value);
				this.OnPropertyChanged("mwo_AsyncAutoDelete");
			}
		}
		
		/// <summary>
		/// Whether to execute the step asynchronously.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_asynchronous")]
		public System.Nullable<bool> mwo_Asynchronous
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("mwo_asynchronous");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_Asynchronous");
				this.SetAttributeValue("mwo_asynchronous", value);
				this.OnPropertyChanged("mwo_Asynchronous");
			}
		}
		
		/// <summary>
		/// The Description of the Plugin Step
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_description")]
		public string mwo_Description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mwo_description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_Description");
				this.SetAttributeValue("mwo_description", value);
				this.OnPropertyChanged("mwo_Description");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_eventhandler")]
		public string mwo_EventHandler
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mwo_eventhandler");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_EventHandler");
				this.SetAttributeValue("mwo_eventhandler", value);
				this.OnPropertyChanged("mwo_EventHandler");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_eventhandlertype")]
		public virtual mwo_EventHandlerType? mwo_EventHandlerType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((mwo_EventHandlerType?)(EntityOptionSetEnum.GetEnum(this, "mwo_eventhandlertype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_EventHandlerType");
				this.SetAttributeValue("mwo_eventhandlertype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("mwo_EventHandlerType");
			}
		}
		
		/// <summary>
		/// Filtering Attributes for the Update Message
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_filteringattributes")]
		public string mwo_FilteringAttributes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mwo_filteringattributes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_FilteringAttributes");
				this.SetAttributeValue("mwo_filteringattributes", value);
				this.OnPropertyChanged("mwo_FilteringAttributes");
			}
		}
		
		/// <summary>
		/// Images will be filtered to this comma separated list of entity attributes. Leave blank if you want all.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_imageattributes")]
		public string mwo_ImageAttributes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mwo_imageattributes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_ImageAttributes");
				this.SetAttributeValue("mwo_imageattributes", value);
				this.OnPropertyChanged("mwo_ImageAttributes");
			}
		}
		
		/// <summary>
		/// The Key of the Image in the Plugin Context
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_imagename")]
		public string mwo_ImageName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mwo_imagename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_ImageName");
				this.SetAttributeValue("mwo_imagename", value);
				this.OnPropertyChanged("mwo_ImageName");
			}
		}
		
		/// <summary>
		/// Select an Image Type you want to associate with the plugin step
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_imagetype")]
		public virtual mwo_ImageType? mwo_ImageType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((mwo_ImageType?)(EntityOptionSetEnum.GetEnum(this, "mwo_imagetype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_ImageType");
				this.SetAttributeValue("mwo_imagetype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("mwo_ImageType");
			}
		}
		
		/// <summary>
		/// Determines whether this record manages the according Dynamics Plugin Registration Step. Select no to untie the record and be able to delete it without deleting the actual  registration.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_managed")]
		public System.Nullable<bool> mwo_Managed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("mwo_managed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_Managed");
				this.SetAttributeValue("mwo_managed", value);
				this.OnPropertyChanged("mwo_Managed");
			}
		}
		
		/// <summary>
		/// Required name field
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_name")]
		public string mwo_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mwo_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_Name");
				this.SetAttributeValue("mwo_name", value);
				this.OnPropertyChanged("mwo_Name");
			}
		}
		
		/// <summary>
		/// Holds the Guid to the actual Dynamics Plugin Step
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_pluginstepid")]
		public string mwo_PluginStepId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mwo_pluginstepid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_PluginStepId");
				this.SetAttributeValue("mwo_pluginstepid", value);
				this.OnPropertyChanged("mwo_PluginStepId");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_pluginstepregistrationid")]
		public System.Nullable<System.Guid> mwo_PluginStepRegistrationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("mwo_pluginstepregistrationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_PluginStepRegistrationId");
				this.SetAttributeValue("mwo_pluginstepregistrationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("mwo_PluginStepRegistrationId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_pluginstepregistrationid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.mwo_PluginStepRegistrationId = value;
			}
		}
		
		/// <summary>
		/// The Stage to execute in
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_pluginstepstage")]
		public virtual mwo_PluginStage? mwo_PluginStepStage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((mwo_PluginStage?)(EntityOptionSetEnum.GetEnum(this, "mwo_pluginstepstage")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_PluginStepStage");
				this.SetAttributeValue("mwo_pluginstepstage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("mwo_PluginStepStage");
			}
		}
		
		/// <summary>
		/// The primary Entity you want to register to
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_primaryentity")]
		public string mwo_PrimaryEntity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mwo_primaryentity");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_PrimaryEntity");
				this.SetAttributeValue("mwo_primaryentity", value);
				this.OnPropertyChanged("mwo_PrimaryEntity");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_rank")]
		public System.Nullable<int> mwo_Rank
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("mwo_rank");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_Rank");
				this.SetAttributeValue("mwo_rank", value);
				this.OnPropertyChanged("mwo_Rank");
			}
		}
		
		/// <summary>
		/// The Dynamics SDK Message to Register to
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_sdkmessage")]
		public string mwo_SDKMessage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mwo_sdkmessage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_SDKMessage");
				this.SetAttributeValue("mwo_sdkmessage", value);
				this.OnPropertyChanged("mwo_SDKMessage");
			}
		}
		
		/// <summary>
		/// The secondary entity to register to, only valid in a few messages like Associate.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_secondaryentity")]
		public string mwo_SecondaryEntity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mwo_secondaryentity");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_SecondaryEntity");
				this.SetAttributeValue("mwo_secondaryentity", value);
				this.OnPropertyChanged("mwo_SecondaryEntity");
			}
		}
		
		/// <summary>
		/// Unsecure Configuration for the Plugin Step
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mwo_stepconfiguration")]
		public string mwo_StepConfiguration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mwo_stepconfiguration");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mwo_StepConfiguration");
				this.SetAttributeValue("mwo_stepconfiguration", value);
				this.OnPropertyChanged("mwo_StepConfiguration");
			}
		}
		
		/// <summary>
		/// Unique identifier for the organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Status of the Plugin Step Registration
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<mwo.LiveRegistration.Plugins.Models.mwo_PluginStepRegistrationState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((mwo.LiveRegistration.Plugins.Models.mwo_PluginStepRegistrationState)(System.Enum.ToObject(typeof(mwo.LiveRegistration.Plugins.Models.mwo_PluginStepRegistrationState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Plugin Step Registration
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual mwo_PluginStepRegistration_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((mwo_PluginStepRegistration_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public mwo_PluginStepRegistration(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["mwo_pluginstepregistrationid"] = base.Id;
                        break;
                    case "mwo_pluginstepregistrationid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}